- name: "Ensure task trove required paths exist"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0775"
  loop:
    - "{{ task_trove_data_volume }}"
    - "{{ task_trove_script_d }}"
    - "{{ task_trove_backup_d }}"

- name: "Pull task trove image."
  containers.podman.podman_image:
    name: "{{ task_trove_image }}"
    state: present
  notify: "Restart {{ task_trove_service_name }}"

- name: "Create task_trove container quadlet."
  containers.podman.podman_container:
    name: "{{ task_trove_container_name }}"
    state: quadlet
    image: "{{ task_trove_image }}"
    volumes:
      - "{{ task_trove_data_volume }}:/app/data:Z"
    ports:
      - "3000"
    network:
      - "{{ evilwoods_container_network_file }}"
    quadlet_filename: "{{ task_trove_app_name }}.container"
    quadlet_options:
      - |
        [Unit]
        Description=TaskTrove Task Management
      - |
        [Install]
        WantedBy={{ evilwoods_service_target }}
  notify: "Restart {{ task_trove_service_name }}"

- name: "Render task trove caddyfile."
  ansible.builtin.template:
    src: task-trove.caddyfile.j2
    dest: "{{ evilwoods_caddy_service_config }}/task-trove.caddyfile"
    mode: "0644"
  notify:
    - Restart caddy

- name: "Render task trove backup script."
  ansible.builtin.template:
    src: "{{ task_trove_backup_script }}.j2"
    dest: "{{ task_trove_script_d }}/{{ task_trove_backup_script }}"
    mode: "0744"

- name: "Render task trove backup service."
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ evilwoods_unit_file_path }}/{{ item }}"
    mode: "0644"
  loop:
    - "{{ task_trove_backup_service }}"
    - "{{ task_trove_backup_timer }}"

- name: "Enable task trove backup timer."
  ansible.builtin.systemd:
    name: "{{ task_trove_backup_timer }}"
    state: started
    enabled: true
    scope: user
    daemon_reload: true
